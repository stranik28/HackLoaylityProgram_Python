"""Init

Revision ID: e133934d1804
Revises: 
Create Date: 2024-04-20 20:30:29.635564

"""
import hashlib

from alembic import op
import sqlalchemy as sa

from configs.config import SALT

# revision identifiers, used by Alembic.
revision = 'e133934d1804'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('company',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('logo', sa.String(), nullable=False),
    sa.Column('category', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_company')),
    sa.UniqueConstraint('id', name=op.f('uq_company_id')),
    sa.UniqueConstraint('name', name=op.f('uq_company_name'))
    )
    op.create_table('users',
    sa.Column('username', sa.Text(), nullable=False),
    sa.Column('role', sa.String(), nullable=True),
    sa.Column('employer_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['employer_id'], ['company.id'], name=op.f('fk_users_employer_id_company')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('id', name=op.f('uq_users_id')),
    sa.UniqueConstraint('username', name=op.f('uq_users_username'))
    )
    op.create_table('operation',
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], name=op.f('fk_operation_company_id_company')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_operation_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_operation')),
    sa.UniqueConstraint('id', name=op.f('uq_operation_id'))
    )
    op.create_table('password',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('password', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_password_user_id_users'), ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_password')),
    sa.UniqueConstraint('id', name=op.f('uq_password_id'))
    )
    op.create_table('wallet',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('balance', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_wallet_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_wallet')),
    sa.UniqueConstraint('id', name=op.f('uq_wallet_id'))
    )
    op.execute('''INSERT INTO company (name, logo, category) VALUES ('Surf Coffee',
    'https://cdn1.flamp.ru/fb3b32c7e4f787a4cfec1b6f4db7c544_300_300.jpg', 'Кофейня');''')
    op.execute('''INSERT INTO users (username, role, employer_id) VALUES ('admin', 'admin',1);''')
    password = "admin"
    hash_object = hashlib.sha256()  # Add the salt to the password and hash it
    hash_object.update(SALT + password.encode())  # Get the hex digest of the hash
    password = hash_object.hexdigest()
    op.execute(f'''INSERT INTO password (password, user_id) VALUES ('{password}', 1);''')
    op.execute(f'''INSERT INTO wallet (user_id, balance) VALUES (1, 500);''')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('wallet')
    op.drop_table('password')
    op.drop_table('operation')
    op.drop_table('users')
    op.drop_table('company')
    # ### end Alembic commands ###
